import json
import sys

ppg_ecg_data = [
    -0.125, 0.035, 0.194, 0.35, 0.5, 0.638, 0.76, 0.86, 0.939, 0.989,
    1.0, 0.97, 0.9, 0.793, 0.655, 0.491, 0.309, 0.118, -0.08, -0.27,
    -0.45, -0.62, -0.76, -0.87, -0.95, -0.99, -0.99, -0.95, -0.86, -0.74,
    -0.58, -0.4, -0.2, -0.0, 0.203, 0.398, 0.58, 0.74, 0.87, 0.96,
    1.0, 0.99, 0.94, 0.84, 0.7, 0.53, 0.33, 0.12, -0.1, -0.3, -0.5,
    -0.67, -0.8, -0.9, -0.96, -0.98, -0.95, -0.88, -0.77, -0.62, -0.44,
    -0.24, -0.02, 0.19, 0.39, 0.58, 0.74, 0.87, 0.96, 1.0, 0.99, 0.94,
    0.84, 0.7, 0.53, 0.33, 0.12, -0.1, -0.3, -0.5, -0.67, -0.8, -0.9,
    -0.96, -0.98, -0.95, -0.88, -0.77, -0.62, -0.44, -0.24, -0.02, 0.19,
    0.39, 0.58, 0.74, 0.87, 0.96, 1.0, 0.99, 0.94, 0.84, 0.7, 0.53,
    0.33, 0.12, -0.1, -0.3, -0.5, -0.67, -0.8, -0.9, -0.96, -0.98, -0.95,
    -0.88, -0.77, -0.62, -0.44, -0.24, -0.02, 0.19, 0.39, 0.58, 0.74,
    0.87, 0.96, 1.0, 0.99, 0.94, 0.84, 0.7, 0.53, 0.33, 0.12, -0.1,
    -0.3, -0.5, -0.67, -0.8, -0.9, -0.96, -0.98, -0.95, -0.88, -0.77,
    -0.62, -0.44, -0.24, -0.02, 0.19, 0.39, 0.58, 0.74, 0.87, 0.96,
    1.0, 0.99, 0.94, 0.84, 0.7, 0.53, 0.33, 0.12, -0.1, -0.3, -0.5,
    -0.67, -0.8, -0.9, -0.96, -0.98, -0.95, -0.88, -0.77, -0.62, -0.44,
    -0.24, -0.02, 0.19, 0.39, 0.58, 0.74, 0.87, 0.96, 1.0, 0.99, 0.94,
    0.84, 0.7, 0.53, 0.33, 0.12, -0.1, -0.3, -0.5, -0.67, -0.8, -0.9,
    -0.96, -0.98, -0.95, -0.88, -0.77, -0.62, -0.44, -0.24, -0.02, 0.19,
    0.39, 0.58, 0.74, 0.87, 0.96, 1.0, 0.99, 0.94, 0.84, 0.7, 0.53
]

sample_rate = 100.0

try:
    import heartpy as hp
except Exception as e:
    print("ERROR: heartpy not installed (pip install heartpy).", file=sys.stderr)
    sys.exit(2)

scaled = hp.scale_data(ppg_ecg_data)
filtered = hp.filter_signal(scaled, cutoff=[0.5, 5.0], sample_rate=sample_rate, order=2, filtertype='bandpass')
wd, m = hp.process(filtered, sample_rate=sample_rate, bpmmin=30, bpmmax=240)

out = {
    'bpm': float(m.get('bpm', float('nan'))),
    'sdnn': float(m.get('sdnn', float('nan'))),
    'rmssd': float(m.get('rmssd', float('nan'))),
    'pnn50': float(m.get('pnn50', float('nan'))),
    'lf': float(m.get('lf', float('nan'))),
    'hf': float(m.get('hf', float('nan'))),
    'lf_hf': float(m.get('lf/hf', m.get('lf_hf', float('nan')))),
    'breathingrate': float(m.get('breathingrate', float('nan'))),
    'n_peaks': int(len(wd.get('peaklist', [])))
}

print(json.dumps(out, indent=2))
